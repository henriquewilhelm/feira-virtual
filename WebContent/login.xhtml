<!DOCTYPE html>

<html xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	>

<h:body>
				<script>
				  // This is called with the results from from FB.getLoginStatus().
				  function statusChangeCallback(response) {
				    console.log('statusChangeCallback');
				    console.log(response);
				    // The response object is returned with a status field that lets the
				    // app know the current login status of the person.
				    // Full docs on the response object can be found in the documentation
				    // for FB.getLoginStatus().
				    if (response.status === 'connected') {
				      // Logged into your app and Facebook.
				      testAPI();
				    } else if (response.status === 'not_authorized') {
				      // The person is logged into Facebook, but not your app.
				      document.getElementById('status').innerHTML = 'Please log ' +
				        'into this app.';
				    } else {
				      // The person is not logged into Facebook, so we're not sure if
				      // they are logged into this app or not.
				      document.getElementById('status').innerHTML = 'Please log ' +
				        'into Facebook.';
				    }
				  }
				
				  // This function is called when someone finishes with the Login
				  // Button.  See the onlogin handler attached to it in the sample
				  // code below.
				  function checkLoginState() {
				    FB.getLoginStatus(function(response) {
				      statusChangeCallback(response);
				    });
				  }
				
				  window.fbAsyncInit = function() {
				  FB.init({
				    appId      : '{931989730206972}',
				    cookie     : true,  // enable cookies to allow the server to access 
				                        // the session
				    xfbml      : true,  // parse social plugins on this page
				    version    : 'v2.2' // use version 2.2
				  });
				
				  // Now that we've initialized the JavaScript SDK, we call 
				  // FB.getLoginStatus().  This function gets the state of the
				  // person visiting this page and can return one of three states to
				  // the callback you provide.  They can be:
				  //
				  // 1. Logged into your app ('connected')
				  // 2. Logged into Facebook, but not your app ('not_authorized')
				  // 3. Not logged into Facebook and can't tell if they are logged into
				  //    your app or not.
				  //
				  // These three cases are handled in the callback function.
				
				  FB.getLoginStatus(function(response) {
				    statusChangeCallback(response);
				  });
				
				  };
				
				  // Load the SDK asynchronously
				  (function(d, s, id) {
				    var js, fjs = d.getElementsByTagName(s)[0];
				    if (d.getElementById(id)) return;
				    js = d.createElement(s); js.id = id;
				    js.src = "//connect.facebook.net/en_US/sdk.js";
				    fjs.parentNode.insertBefore(js, fjs);
				  }(document, 'script', 'facebook-jssdk'));
				
				  // Here we run a very simple test of the Graph API after login is
				  // successful.  See statusChangeCallback() for when this call is made.
				  function testAPI() {
				    console.log('Welcome!  Fetching your information.... ');
				    FB.api('/me', function(response) {
				      console.log('Successful login for: ' + response.name);
				      document.getElementById('status').innerHTML =
				        'Thanks for logging in, ' + response.name + '!';
				    });
				  }
				</script>
				
	<ui:composition template="/layout/layout.xhtml">
		<ui:define name="content">
			<h1>
				<h:outputText value="Login" />
			</h1>
			<h:form styleClass="form-horizontal">
				<div class="form-group">
					<h:outputLabel for="email" value="E-mail " styleClass="col-sm-2" />
					<div class="col-sm-7">
						<h:inputText id="email" value="#{loginBean.email}" styleClass="form-control" />
	                </div>
	                <div class="col-sm-3">
						<h:message for="email" />
					</div>
                </div>
                <div class="form-group">
                
					<h:outputLabel for="password" value="Senha: " styleClass="col-sm-2" />
					<div class="col-sm-7">
							<h:inputSecret id="password" value="#{loginBean.password}" styleClass="form-control"/>
					</div>		
					<div class="col-sm-3">
							<h:message for="password" />
					</div>
				</div>
				<h:messages />
                <br />
				<h:commandButton styleClass="btn btn-primary btn-lg" value="Login" action="#{loginBean.login}" />
				<h:commandButton styleClass="btn btn-primary btn-lg" value="Esqueci a Senha" action="#{loginBean.lembrarSenha}" />
				<br />
				<br />
				<br />
				<h2>
						<a href="/feira/loja/registrar.xhtml">Fazer Cadastro</a>
				</h2>
				<div class="fb-login-button" data-max-rows="1" data-size="medium" data-show-faces="false" data-auto-logout-link="false"></div>
				
				<div id="status">
				</div>		
				
			</h:form>
			<br />
			<br />
		</ui:define>
		<ui:define name="footer">
		      		<ui:include src="/footer.xhtml"></ui:include>
		</ui:define>
	</ui:composition>
</h:body>
</html>